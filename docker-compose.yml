version: '3.7'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend/modules:/usr/src/app/modules
      - ./backend/public:/usr/src/app/public
      - ./backend/users_files:/usr/src/app/users_files
      - ./backend/views:/usr/src/app/views
      - ./backend/ice.json:/usr/src/app/ice.json:ro
      - ./backend/test.js:/usr/src/app/test.js
      - ./backend/server_http.js:/usr/src/app/server_http.js
      - ./backend/server_https.js:/usr/src/app/server_https.js
    dns: 8.8.8.8
    #ports:
    #  - "8000:8000"
    environment:
      NODE_ENV: production
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/usr/src/env
    dns: 8.8.8.8
    ports:
      - "8080:8080"
      - "3000:3000"
    environment:
      NODE_ENV: development

  redis:
    image: redis:4.0-alpine
    expose:
      - 6379
    restart: unless-stopped

  nginx:
    image: nginx:1.15-alpine
    depends_on:
     - backend
    ports:
      - "8005:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    restart: unless-stopped

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    restart: unless-stopped

  coturn:
    image: instrumentisto/coturn
    ports:
      - "3478:3478"
      - "3479:3479"
      - "5349:5349"
      - "5350:5350"
    #network_mode: "host"
    volumes:
      - ./coturn/turnserver.conf:/etc/coturn/turnserver.conf
      - ./coturn/db:/var/db/turndb:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./coturn/coturn:/etc/default/coturn

